import { useState, useEffect } from 'react'
import { getCharacter } from '@/utils/MarvelAPI'
import { useFavorites } from '@/context/FavoritesContext'
import CharacterCard from '@/components/CharacterCard'
import { GetCharacterResultType, GetCharacterType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetCharacter.types'
import { DEFAULT_CHARACTER_CARD } from '@/constants'

const FavoritesList = () => {
    const { favorites } = useFavorites()
    const [characters, setCharacters] = useState<GetCharacterResultType[]>(Array.apply(null, Array(favorites.length)).map(() => DEFAULT_CHARACTER_CARD))

    useEffect(() => {
        const fetchCharacters = async () => {
            const promises = await Promise.all(favorites.map(favorite => new Promise((resolve) => {
                resolve(getCharacter({
                    id: favorite,
                }))
            })))
            const response = promises.map((character) => {
                const parsed = character as GetCharacterType

                return parsed.data.results[0]
            })

            setCharacters(response)
        }

        fetchCharacters()
    }, [])

    return <>
        <ul>
            {characters.map((character, key) => (
                <li key={key}>
                    <CharacterCard character={character} />
                </li>
            ))}
        </ul>
    </>
}

export default FavoritesList