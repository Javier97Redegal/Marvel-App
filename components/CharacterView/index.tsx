import { useEffect, useState } from 'react'
import { useFavorites } from '@/context/FavoritesContext'
import { getCharacter, getComicsFromCharacter } from '@/utils/MarvelAPI'
import { GetCharacterResultType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetCharacter.types'
import { GetComicsFromCharacterResultType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetComicsFromCharacter.types'
import { CharacterViewProps } from './types'
import { DEFAULT_COMIC_LIMIT } from '@/constants'

const CharacterView = ({
    id
}: CharacterViewProps) => {
    const { favoritesIds, addFavorite, removeFavorite } = useFavorites()
    const [character, setCharacter] = useState<GetCharacterResultType | undefined>(undefined)
    const [comics, setComics] = useState<GetComicsFromCharacterResultType[]>([])
    const isFavorite = favoritesIds.includes(Number(id))

    useEffect(() => {
        const fetchCharacter = async () => {
            const response = await getCharacter({
                id,
            })

            setCharacter(response.data.results[0])
        }

        const fetchComics = async () => {
            const response = await getComicsFromCharacter({
                id,
                params: {
                    limit: DEFAULT_COMIC_LIMIT
                }
            })

            setComics(response.data.results)
        }

        if (id) {
            fetchCharacter()
            fetchComics()
        }
    }, [id])

    if (!character) return <p>Loading...</p>

    return <>
        <img src={`${character.thumbnail.path}.${character.thumbnail.extension}`} alt={character.name} />
        <h1>{character.name}</h1>
        <p>{character.description}</p>
        <button onClick={() => (isFavorite ? removeFavorite(character) : addFavorite(character))}>
            {isFavorite ? 'Remove from Favorites' : 'Add to Favorites'}
        </button>
        {!!comics.length && <>
            <h2>Comics</h2>
            <ul>
                {comics.map(comic => (
                    <li key={comic.id}>{comic.title}</li>
                ))}
            </ul>
        </>}
    </>
}

export default CharacterView