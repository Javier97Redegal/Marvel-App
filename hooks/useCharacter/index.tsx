import { useEffect, useState } from 'react'
import { getCharacter, getComicsFromCharacter } from '@/utils/MarvelAPI'
import { GetCharacterResultType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetCharacter.types'
import { GetComicsFromCharacterResultType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetComicsFromCharacter.types'
import { DEFAULT_COMIC_LIMIT } from '@/constants'

const useCharacter = (id: string) => {
    const [character, setCharacter] = useState<GetCharacterResultType | undefined>(undefined)
    const [comics, setComics] = useState<GetComicsFromCharacterResultType[] | undefined>(undefined)

    useEffect(() => {
        const fetchCharacter = async () => {
            const response = await getCharacter({
                id,
            })

            setCharacter(response.data.results[0])
        }

        const fetchComics = async () => {
            const response = await getComicsFromCharacter({
                id,
                params: {
                    limit: DEFAULT_COMIC_LIMIT
                }
            })

            setComics(response.data.results)
        }

        if (id) {
            fetchCharacter()
            fetchComics()
        }
    }, [id])

    return {
        character,
        comics,
    }
}

export default useCharacter