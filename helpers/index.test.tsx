import '@testing-library/jest-dom'
import { handleFavoriteButton } from '.'
import { HandleFavoriteButton } from './types'
import { GetCharactersResultType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetCharacters.types'

describe('handleFavoriteButton test', () => {
    let character: GetCharactersResultType
    let addFavorite: jest.Mock
    let removeFavorite: jest.Mock

    beforeEach(() => {
        character = { id: 1, name: 'Spider-Man', thumbnail: { path: 'path/to/spiderman', extension: 'jpg' } } as GetCharactersResultType
        addFavorite = jest.fn()
        removeFavorite = jest.fn()
    })

    it('calls removeFavorite when isFavorite is true', () => {
        const props: HandleFavoriteButton = { character, isFavorite: true, addFavorite, removeFavorite }

        handleFavoriteButton(props)

        expect(removeFavorite).toHaveBeenCalledWith(character)
        expect(addFavorite).not.toHaveBeenCalled()
    })

    it('calls addFavorite when isFavorite is false', () => {
        const props: HandleFavoriteButton = { character, isFavorite: false, addFavorite, removeFavorite }

        handleFavoriteButton(props)

        expect(addFavorite).toHaveBeenCalledWith(character)
        expect(removeFavorite).not.toHaveBeenCalled()
    })
})
