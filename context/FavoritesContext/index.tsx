import { createContext, useState, ReactNode, useContext } from 'react'
import { FavoritesContextProps } from './types'
import { GetCharactersResultType } from '@/utils/MarvelAPI/AutoGeneratedTypes/GetCharacters.types'

const FavoritesContext = createContext<FavoritesContextProps | undefined>(undefined)

export const FavoritesProvider = ({ children }: { children: ReactNode }) => {
    const [favorites, setFavorites] = useState<GetCharactersResultType[]>([])

    const addFavorite = (character: GetCharactersResultType) => {
        setFavorites([...favorites, character])
    }

    const removeFavorite = (character: GetCharactersResultType) => {
        setFavorites(favorites.filter(({ id }) => id !== character.id))
    }

    const favoriteIds = favorites.map(favorite => favorite.id)

    return <>
        <FavoritesContext.Provider value={{ favorites, favoriteIds, addFavorite, removeFavorite }}>
            {children}
        </FavoritesContext.Provider>
    </>
}

export const useFavorites = () => {
    const context = useContext(FavoritesContext)

    if (!context) {
        throw new Error('useFavorites must be used within a FavoritesProvider')
    }

    return context
}